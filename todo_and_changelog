ChangeLog:
* before 12/17/09 - initial version many things built in (see 'ale search')
* 12/17/09 - added gae remoteshell command to launch shell into live app 
* 1/4/10 - added 'shell' to launch local iPython shell

TODO:
Prioritized:
*

Not prioritized yet:
* when the api and structure stabilizes:
  * test the heck out of thyself
* MD5 check downloads
* resolve namespace/multicommand ambiguity issues (installing 'test' installs test+coverage)
* non-osx compatibility?
* NOSE GAE? -- sandbox / test feature
* use docstrings for help text
* test makers/http recording tools
* dump/restore shortcuts for datastore
* local and remote shell
* more sophisticated test re-runner for watcher -- modipyd??
* generate smoke test with hello world apps?
* pale stuff
* on failure you get errorlevels adding together instead of number of failures (256 errors = a 256 return code usually)
* detect # of cores, and pass correct --processes arg to nose test/coverage runners
* after a deploy, pop open the homepage of the app, or the dashboard?
* allow passing of args to the gae start (dev_appserver)
* turn off that nose log capturing stuff
* document? when pulling a project with an .ale submodule, have to do submodule init, then submodule update
* pyflakes runner - take entire set of files to check (based on changeset) instead of making it rescan itself -- then carry that into other commands

random ideas:
* eclipse init to set up a pydev project
* downorup -- ping homepage on interval to check availability
* media compressor/bundler
* on deploy (to gae) we could do one of those empty commit w/msg's to git 'Deployed version ___'
* http://www.st.cs.uni-saarland.de/dd/DD.py  / git bisect

